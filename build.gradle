buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("com.github.jengelman.gradle.plugins:shadow:1.2.3")
//        classpath "gradle.plugin.com.bnorm.power:kotlin-power-assert-gradle:0.5.3"
    }
}

plugins {
    id "com.bnorm.power.kotlin-power-assert" version "0.5.3"
}
apply plugin: 'kotlin'
apply plugin: 'application'

task stage(dependsOn: ['installDist'])

group 'Website'
version '1.2.0'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    google()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlinx' }
    maven { url "https://dl.bintray.com/kotlin/squash" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-freemarker:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.4'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-jetty:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    implementation "io.ktor:ktor-locations:$ktor_version"
    implementation "com.h2database:h2:$h2_version"
    implementation "org.jetbrains.exposed:exposed:$exposed_version"
    implementation "org.postgresql:postgresql:$postgresql_version"
    implementation "com.zaxxer:HikariCP:$hikari_version"
    implementation 'com.github.doyaaaaaken:kotlin-csv-jvm:0.7.3'
    implementation 'com.sendgrid:sendgrid-java:4.6.3'
    implementation 'com.google.api-client:google-api-client:1.30.9'
    implementation 'io.sentry:sentry:3.1.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.1.1'
    implementation 'dev.inmo:krontab:0.6.1' // To set newsletter cron

    // Retrofit
    implementation(["com.squareup.retrofit2:retrofit:$retrofit_version",
                    "com.squareup.retrofit2:converter-gson:$retrofit_version",
                    "com.squareup.okhttp3:okhttp:$okhttp_version",
                    "com.squareup.okhttp3:logging-interceptor:$okhttp_version"])
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    // Markdown to HTML
    implementation 'com.atlassian.commonmark:commonmark:0.13.0'

    // Generation
    implementation 'com.github.cretz.kastree:kastree-ast-psi:0.4.0'

    // Cache
    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.0'

    api 'org.litote.kmongo:kmongo-coroutine:4.2.6'
    implementation group: 'org.koin', name: 'koin-ktor', version: '2.1.6'
    implementation group: 'org.koin', name: 'koin-core-ext', version: '2.1.6'
    testImplementation group: 'org.koin', name: 'koin-test', version: '2.1.6'
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"
    testImplementation "io.ktor:ktor-client-mock-jvm:$ktor_version"
    testImplementation 'de.bwaldvogel:mongo-java-server:1.37.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
//        useIR = true
    }
}

//tasks.withType(com.bnorm.power.PowerAssertGradleExtension).configureEach {
//    functions = listOf("kotlin.test.assertTrue", "kotlin.require", "kotlin.assert")
//}
